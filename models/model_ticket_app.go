/*
巨量方舟

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
    "fmt"
)
// TicketApp the model 'TicketApp'
type TicketApp string

// List of ticketApp
const (
	TicketApp_DOU = "TICKET_APPLICATION_DOU"
	TicketApp_AGENT = "TICKET_APPLICATION_AGENT"
)

// All allowed values of TicketApp enum
var AllowedTicketAppEnumValues = []TicketApp{
	"TICKET_APPLICATION_DOU",
	"TICKET_APPLICATION_AGENT",
}

// NewTicketAppFromValue returns a pointer to a valid TicketApp
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewTicketAppFromValue(v string) (*TicketApp, error) {
	ev := TicketApp(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for TicketApp: valid values are %v", v, AllowedTicketAppEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v TicketApp) IsValid() bool {
	for _, existing := range AllowedTicketAppEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ticketApp value
func (v TicketApp) Ptr() *TicketApp {
	return &v
}


